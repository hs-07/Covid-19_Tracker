{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","Images/covid-19.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1ffda60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3iuKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__iRork\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__140yt\",\"card\":\"Cards_card__33DsE\",\"infected\":\"Cards_infected__1qaxY\",\"recovered\":\"Cards_recovered__3kreo\",\"deaths\":\"Cards_deaths__f3TyW\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } } ) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                 <h2>Infected</h2>\r\n\r\n                  <h1>\r\n                   <CountUp start={0} end={confirmed.value} duration={3} separator=\",\"  />\r\n                   </h1>\r\n                 <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n                 <p> Number of Active cases of COVID-19</p>\r\n                 </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                  <h2>Recovered</h2>\r\n\r\n                  <h1>\r\n                   <CountUp start={0} end={recovered.value} duration={3} separator=\",\"  />\r\n                   </h1>\r\n                 <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n                 <p> Number of recovered people from COVID-19</p>\r\n                 </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                 <h2>Deaths</h2>\r\n\r\n                  <h1>\r\n                   <CountUp start={0} end={deaths.value} duration={3} separator=\",\"  />\r\n                   </h1>\r\n                 <h3>{new Date(lastUpdate).toDateString()}</h3>\r\n                 <p> Number of deaths due to COVID-19</p>\r\n                 </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n       \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255, 0 ,0 , 0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n\r\n    );\r\n\r\n    const barChart = (\r\n    confirmed\r\n    ? (\r\n        <Bar\r\n        data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n                label: 'People',\r\n                backgroundColor:['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n            }]\r\n        }}\r\n        options={{\r\n            legend: { display: false},\r\n            title: { display: true, text: `Current state in ${country}`},\r\n        }}\r\n        />\r\n    ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid-19.aeac72c5.png\";","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api'\r\nimport coronaImage from '../src/Images/covid-19.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n\r\n        const fetchedData = await fetchData(country);\r\n        \r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"Covid-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FikU\",\"image\":\"App_image__3SP6z\"};"],"sourceRoot":""}